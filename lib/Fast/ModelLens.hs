{-
   FastAPI

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.1.0
   FastAPI API version: 0.1.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : Fast.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module Fast.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import Fast.Model
import Fast.Core


-- * HTTPValidationError

-- | 'hTTPValidationErrorDetail' Lens
hTTPValidationErrorDetailL :: Lens_' HTTPValidationError (Maybe [ValidationError])
hTTPValidationErrorDetailL f HTTPValidationError{..} = (\hTTPValidationErrorDetail -> HTTPValidationError { hTTPValidationErrorDetail, ..} ) <$> f hTTPValidationErrorDetail
{-# INLINE hTTPValidationErrorDetailL #-}



-- * HealthResponse

-- | 'healthResponseStatus' Lens
healthResponseStatusL :: Lens_' HealthResponse (Text)
healthResponseStatusL f HealthResponse{..} = (\healthResponseStatus -> HealthResponse { healthResponseStatus, ..} ) <$> f healthResponseStatus
{-# INLINE healthResponseStatusL #-}



-- * InitialResponse

-- | 'initialResponseSuccess' Lens
initialResponseSuccessL :: Lens_' InitialResponse (Maybe Bool)
initialResponseSuccessL f InitialResponse{..} = (\initialResponseSuccess -> InitialResponse { initialResponseSuccess, ..} ) <$> f initialResponseSuccess
{-# INLINE initialResponseSuccessL #-}

-- | 'initialResponseError' Lens
initialResponseErrorL :: Lens_' InitialResponse (Maybe Text)
initialResponseErrorL f InitialResponse{..} = (\initialResponseError -> InitialResponse { initialResponseError, ..} ) <$> f initialResponseError
{-# INLINE initialResponseErrorL #-}

-- | 'initialResponseRequestId' Lens
initialResponseRequestIdL :: Lens_' InitialResponse (Int)
initialResponseRequestIdL f InitialResponse{..} = (\initialResponseRequestId -> InitialResponse { initialResponseRequestId, ..} ) <$> f initialResponseRequestId
{-# INLINE initialResponseRequestIdL #-}

-- | 'initialResponseRequestCheckUrl' Lens
initialResponseRequestCheckUrlL :: Lens_' InitialResponse (Text)
initialResponseRequestCheckUrlL f InitialResponse{..} = (\initialResponseRequestCheckUrl -> InitialResponse { initialResponseRequestCheckUrl, ..} ) <$> f initialResponseRequestCheckUrl
{-# INLINE initialResponseRequestCheckUrlL #-}



-- * LayoutFinalResponse

-- | 'layoutFinalResponseStatus' Lens
layoutFinalResponseStatusL :: Lens_' LayoutFinalResponse (Text)
layoutFinalResponseStatusL f LayoutFinalResponse{..} = (\layoutFinalResponseStatus -> LayoutFinalResponse { layoutFinalResponseStatus, ..} ) <$> f layoutFinalResponseStatus
{-# INLINE layoutFinalResponseStatusL #-}

-- | 'layoutFinalResponsePages' Lens
layoutFinalResponsePagesL :: Lens_' LayoutFinalResponse (Maybe [A.Value])
layoutFinalResponsePagesL f LayoutFinalResponse{..} = (\layoutFinalResponsePages -> LayoutFinalResponse { layoutFinalResponsePages, ..} ) <$> f layoutFinalResponsePages
{-# INLINE layoutFinalResponsePagesL #-}

-- | 'layoutFinalResponseSuccess' Lens
layoutFinalResponseSuccessL :: Lens_' LayoutFinalResponse (Maybe Bool)
layoutFinalResponseSuccessL f LayoutFinalResponse{..} = (\layoutFinalResponseSuccess -> LayoutFinalResponse { layoutFinalResponseSuccess, ..} ) <$> f layoutFinalResponseSuccess
{-# INLINE layoutFinalResponseSuccessL #-}

-- | 'layoutFinalResponseError' Lens
layoutFinalResponseErrorL :: Lens_' LayoutFinalResponse (Maybe Text)
layoutFinalResponseErrorL f LayoutFinalResponse{..} = (\layoutFinalResponseError -> LayoutFinalResponse { layoutFinalResponseError, ..} ) <$> f layoutFinalResponseError
{-# INLINE layoutFinalResponseErrorL #-}

-- | 'layoutFinalResponsePageCount' Lens
layoutFinalResponsePageCountL :: Lens_' LayoutFinalResponse (Maybe Int)
layoutFinalResponsePageCountL f LayoutFinalResponse{..} = (\layoutFinalResponsePageCount -> LayoutFinalResponse { layoutFinalResponsePageCount, ..} ) <$> f layoutFinalResponsePageCount
{-# INLINE layoutFinalResponsePageCountL #-}



-- * LineDetectionFinalResponse

-- | 'lineDetectionFinalResponseStatus' Lens
lineDetectionFinalResponseStatusL :: Lens_' LineDetectionFinalResponse (Text)
lineDetectionFinalResponseStatusL f LineDetectionFinalResponse{..} = (\lineDetectionFinalResponseStatus -> LineDetectionFinalResponse { lineDetectionFinalResponseStatus, ..} ) <$> f lineDetectionFinalResponseStatus
{-# INLINE lineDetectionFinalResponseStatusL #-}

-- | 'lineDetectionFinalResponsePages' Lens
lineDetectionFinalResponsePagesL :: Lens_' LineDetectionFinalResponse (Maybe [A.Value])
lineDetectionFinalResponsePagesL f LineDetectionFinalResponse{..} = (\lineDetectionFinalResponsePages -> LineDetectionFinalResponse { lineDetectionFinalResponsePages, ..} ) <$> f lineDetectionFinalResponsePages
{-# INLINE lineDetectionFinalResponsePagesL #-}

-- | 'lineDetectionFinalResponseSuccess' Lens
lineDetectionFinalResponseSuccessL :: Lens_' LineDetectionFinalResponse (Maybe Bool)
lineDetectionFinalResponseSuccessL f LineDetectionFinalResponse{..} = (\lineDetectionFinalResponseSuccess -> LineDetectionFinalResponse { lineDetectionFinalResponseSuccess, ..} ) <$> f lineDetectionFinalResponseSuccess
{-# INLINE lineDetectionFinalResponseSuccessL #-}

-- | 'lineDetectionFinalResponseError' Lens
lineDetectionFinalResponseErrorL :: Lens_' LineDetectionFinalResponse (Maybe Text)
lineDetectionFinalResponseErrorL f LineDetectionFinalResponse{..} = (\lineDetectionFinalResponseError -> LineDetectionFinalResponse { lineDetectionFinalResponseError, ..} ) <$> f lineDetectionFinalResponseError
{-# INLINE lineDetectionFinalResponseErrorL #-}

-- | 'lineDetectionFinalResponsePageCount' Lens
lineDetectionFinalResponsePageCountL :: Lens_' LineDetectionFinalResponse (Maybe Int)
lineDetectionFinalResponsePageCountL f LineDetectionFinalResponse{..} = (\lineDetectionFinalResponsePageCount -> LineDetectionFinalResponse { lineDetectionFinalResponsePageCount, ..} ) <$> f lineDetectionFinalResponsePageCount
{-# INLINE lineDetectionFinalResponsePageCountL #-}



-- * MarkerFinalResponse

-- | 'markerFinalResponseStatus' Lens
markerFinalResponseStatusL :: Lens_' MarkerFinalResponse (Text)
markerFinalResponseStatusL f MarkerFinalResponse{..} = (\markerFinalResponseStatus -> MarkerFinalResponse { markerFinalResponseStatus, ..} ) <$> f markerFinalResponseStatus
{-# INLINE markerFinalResponseStatusL #-}

-- | 'markerFinalResponseMarkdown' Lens
markerFinalResponseMarkdownL :: Lens_' MarkerFinalResponse (Maybe Text)
markerFinalResponseMarkdownL f MarkerFinalResponse{..} = (\markerFinalResponseMarkdown -> MarkerFinalResponse { markerFinalResponseMarkdown, ..} ) <$> f markerFinalResponseMarkdown
{-# INLINE markerFinalResponseMarkdownL #-}

-- | 'markerFinalResponseImages' Lens
markerFinalResponseImagesL :: Lens_' MarkerFinalResponse (Maybe (Map.Map String Text))
markerFinalResponseImagesL f MarkerFinalResponse{..} = (\markerFinalResponseImages -> MarkerFinalResponse { markerFinalResponseImages, ..} ) <$> f markerFinalResponseImages
{-# INLINE markerFinalResponseImagesL #-}

-- | 'markerFinalResponseMeta' Lens
markerFinalResponseMetaL :: Lens_' MarkerFinalResponse (Maybe A.Value)
markerFinalResponseMetaL f MarkerFinalResponse{..} = (\markerFinalResponseMeta -> MarkerFinalResponse { markerFinalResponseMeta, ..} ) <$> f markerFinalResponseMeta
{-# INLINE markerFinalResponseMetaL #-}

-- | 'markerFinalResponseSuccess' Lens
markerFinalResponseSuccessL :: Lens_' MarkerFinalResponse (Maybe Bool)
markerFinalResponseSuccessL f MarkerFinalResponse{..} = (\markerFinalResponseSuccess -> MarkerFinalResponse { markerFinalResponseSuccess, ..} ) <$> f markerFinalResponseSuccess
{-# INLINE markerFinalResponseSuccessL #-}

-- | 'markerFinalResponseError' Lens
markerFinalResponseErrorL :: Lens_' MarkerFinalResponse (Maybe Text)
markerFinalResponseErrorL f MarkerFinalResponse{..} = (\markerFinalResponseError -> MarkerFinalResponse { markerFinalResponseError, ..} ) <$> f markerFinalResponseError
{-# INLINE markerFinalResponseErrorL #-}

-- | 'markerFinalResponsePageCount' Lens
markerFinalResponsePageCountL :: Lens_' MarkerFinalResponse (Maybe Int)
markerFinalResponsePageCountL f MarkerFinalResponse{..} = (\markerFinalResponsePageCount -> MarkerFinalResponse { markerFinalResponsePageCount, ..} ) <$> f markerFinalResponsePageCount
{-# INLINE markerFinalResponsePageCountL #-}



-- * OCRFinalResponse

-- | 'oCRFinalResponseStatus' Lens
oCRFinalResponseStatusL :: Lens_' OCRFinalResponse (Text)
oCRFinalResponseStatusL f OCRFinalResponse{..} = (\oCRFinalResponseStatus -> OCRFinalResponse { oCRFinalResponseStatus, ..} ) <$> f oCRFinalResponseStatus
{-# INLINE oCRFinalResponseStatusL #-}

-- | 'oCRFinalResponsePages' Lens
oCRFinalResponsePagesL :: Lens_' OCRFinalResponse (Maybe [A.Value])
oCRFinalResponsePagesL f OCRFinalResponse{..} = (\oCRFinalResponsePages -> OCRFinalResponse { oCRFinalResponsePages, ..} ) <$> f oCRFinalResponsePages
{-# INLINE oCRFinalResponsePagesL #-}

-- | 'oCRFinalResponseSuccess' Lens
oCRFinalResponseSuccessL :: Lens_' OCRFinalResponse (Maybe Bool)
oCRFinalResponseSuccessL f OCRFinalResponse{..} = (\oCRFinalResponseSuccess -> OCRFinalResponse { oCRFinalResponseSuccess, ..} ) <$> f oCRFinalResponseSuccess
{-# INLINE oCRFinalResponseSuccessL #-}

-- | 'oCRFinalResponseError' Lens
oCRFinalResponseErrorL :: Lens_' OCRFinalResponse (Maybe Text)
oCRFinalResponseErrorL f OCRFinalResponse{..} = (\oCRFinalResponseError -> OCRFinalResponse { oCRFinalResponseError, ..} ) <$> f oCRFinalResponseError
{-# INLINE oCRFinalResponseErrorL #-}

-- | 'oCRFinalResponsePageCount' Lens
oCRFinalResponsePageCountL :: Lens_' OCRFinalResponse (Maybe Int)
oCRFinalResponsePageCountL f OCRFinalResponse{..} = (\oCRFinalResponsePageCount -> OCRFinalResponse { oCRFinalResponsePageCount, ..} ) <$> f oCRFinalResponsePageCount
{-# INLINE oCRFinalResponsePageCountL #-}



-- * ValidationError

-- | 'validationErrorLoc' Lens
validationErrorLocL :: Lens_' ValidationError ([ValidationErrorLocInner])
validationErrorLocL f ValidationError{..} = (\validationErrorLoc -> ValidationError { validationErrorLoc, ..} ) <$> f validationErrorLoc
{-# INLINE validationErrorLocL #-}

-- | 'validationErrorMsg' Lens
validationErrorMsgL :: Lens_' ValidationError (Text)
validationErrorMsgL f ValidationError{..} = (\validationErrorMsg -> ValidationError { validationErrorMsg, ..} ) <$> f validationErrorMsg
{-# INLINE validationErrorMsgL #-}

-- | 'validationErrorType' Lens
validationErrorTypeL :: Lens_' ValidationError (Text)
validationErrorTypeL f ValidationError{..} = (\validationErrorType -> ValidationError { validationErrorType, ..} ) <$> f validationErrorType
{-# INLINE validationErrorTypeL #-}



-- * ValidationErrorLocInner


